Terminals unused in grammar

    LOWER_THAN_ELSE
    UMINUS
    ENDL


State 148 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statements stmt
    3           | ε

    4 stmt: expr SEMICOLON
    5     | ifstmt
    6     | whilestmt
    7     | forstmt
    8     | returnstmt
    9     | BRK SEMICOLON
   10     | CONTINUE SEMICOLON
   11     | block
   12     | funcdef
   13     | SEMICOLON

   14 expr: assignexpr
   15     | expr PLUS expr
   16     | expr MINUS expr
   17     | expr SLASH expr
   18     | expr MULTIPLY expr
   19     | expr MODULO expr
   20     | expr GREATER_THAN expr
   21     | expr GREATER_EQUAL expr
   22     | expr LESSER_THAN expr
   23     | expr LESSER_EQUAL expr
   24     | expr EQUAL expr
   25     | expr NOT_EQUAL expr
   26     | expr AND expr
   27     | expr OR expr
   28     | term

   29 term: NOT expr
   30     | INCREMENT lvalue
   31     | lvalue INCREMENT
   32     | DECREMENT lvalue
   33     | lvalue DECREMENT
   34     | primary

   35 assignexpr: lvalue ASSIGN expr

   36 primary: lvalue
   37        | call
   38        | objectdef
   39        | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS
   40        | const

   41 lvalue: ID
   42       | LOCAL ID
   43       | DOUBLE_COLON ID
   44       | member

   45 member: lvalue DOT ID
   46       | lvalue LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   47       | call DOT ID
   48       | call LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET

   49 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   50     | lvalue callsuffix
   51     | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   52 callsuffix: normcall
   53           | methodcall

   54 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   55 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   56 elist: expr

   57 $@1: ε

   58 elist: expr COMMA elist $@1

   59 objectdef: LEFT_SQUARE_BRACKET elist RIGHT_SQUARE_BRACKET
   60          | LEFT_SQUARE_BRACKET indexed RIGHT_SQUARE_BRACKET

   61 indexed: indexedelem

   62 $@2: ε

   63 indexed: indexedelem COMMA indexed $@2

   64 indexedelem: LEFT_BRACKET expr COLON expr RIGHT_BRACKET

   65 block: LEFT_BRACKET stmt RIGHT_BRACKET
   66      | LEFT_BRACKET RIGHT_BRACKET

   67 funcdef: FUNCTION ID LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block
   68        | FUNCTION ID LEFT_PARENTHESIS RIGHT_PARENTHESIS block

   69 const: INTEGER
   70      | REAL
   71      | STRING
   72      | NIL
   73      | TRUE_KW
   74      | FALSE_KW

   75 idlist: ID

   76 $@3: ε

   77 idlist: COMMA ID idlist $@3

   78 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE stmt
   79       | IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt

   80 whilestmt: WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt

   81 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist SEMICOLON RIGHT_PARENTHESIS stmt

   82 returnstmt: RETURN_KW SEMICOLON
   83           | RETURN_KW expr SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INTEGER <int_val> (258) 69
    ID <str_val> (259) 41 42 43 45 47 55 67 68 75 77
    STRING <str_val> (260) 71
    REAL <real_val> (261) 70
    ASSIGN (262) 35
    OR (263) 27
    AND (264) 26
    EQUAL (265) 24
    NOT_EQUAL (266) 25
    GREATER_THAN (267) 20
    GREATER_EQUAL (268) 21
    LESSER_THAN (269) 22
    LESSER_EQUAL (270) 23
    LOWER_THAN_ELSE (271)
    PLUS (272) 15
    MINUS (273) 16
    MULTIPLY (274) 18
    SLASH (275) 17
    MODULO (276) 19
    UMINUS (277)
    NOT (278) 29
    INCREMENT (279) 30 31
    DECREMENT (280) 32 33
    DOT (281) 45 47
    DOUBLE_DOT (282) 55
    LEFT_SQUARE_BRACKET (283) 46 48 59 60
    RIGHT_SQUARE_BRACKET (284) 46 48 59 60
    LEFT_PARENTHESIS (285) 39 49 51 54 55 67 68 78 79 80 81
    RIGHT_PARENTHESIS (286) 39 49 51 54 55 67 68 78 79 80 81
    SEMICOLON (287) 4 9 10 13 81 82 83
    LEFT_BRACKET (288) 64 65 66
    RIGHT_BRACKET (289) 64 65 66
    COMMA (290) 58 63 77
    COLON (291) 64
    DOUBLE_COLON (292) 43
    IF (293) 78 79
    ELSE (294) 78
    WHILE (295) 80
    FOR (296) 81
    FUNCTION (297) 67 68
    RETURN_KW (298) 82 83
    BRK (299) 9
    CONTINUE (300) 10
    LOCAL (301) 42
    TRUE_KW (302) 73
    FALSE_KW (303) 74
    ENDL (304)
    NIL (305) 72


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    program (52)
        on left: 1
        on right: 0
    statements (53)
        on left: 2 3
        on right: 1 2
    stmt (54)
        on left: 4 5 6 7 8 9 10 11 12 13
        on right: 2 65 78 79 80 81
    expr <int_val> (55)
        on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
        on right: 4 15 16 17 18 19 20 21 22 23 24 25 26 27 29 35 46 48 56 58 64 78 79 80 81 83
    term <int_val> (56)
        on left: 29 30 31 32 33 34
        on right: 28
    assignexpr <int_val> (57)
        on left: 35
        on right: 14
    primary <str_val> (58)
        on left: 36 37 38 39 40
        on right: 34
    lvalue <str_val> (59)
        on left: 41 42 43 44
        on right: 30 31 32 33 35 36 45 46 50
    member <str_val> (60)
        on left: 45 46 47 48
        on right: 44
    call <str_val> (61)
        on left: 49 50 51
        on right: 37 47 48 49
    callsuffix <str_val> (62)
        on left: 52 53
        on right: 50
    normcall <str_val> (63)
        on left: 54
        on right: 52
    methodcall <str_val> (64)
        on left: 55
        on right: 53
    elist <str_val> (65)
        on left: 56 58
        on right: 49 51 54 55 58 59 81
    $@1 (66)
        on left: 57
        on right: 58
    objectdef <str_val> (67)
        on left: 59 60
        on right: 38
    indexed <str_val> (68)
        on left: 61 63
        on right: 60 63
    $@2 (69)
        on left: 62
        on right: 63
    indexedelem <str_val> (70)
        on left: 64
        on right: 61 63
    block <str_val> (71)
        on left: 65 66
        on right: 11 67 68
    funcdef <str_val> (72)
        on left: 67 68
        on right: 12 39 51
    const <str_val> (73)
        on left: 69 70 71 72 73 74
        on right: 40
    idlist <str_val> (74)
        on left: 75 77
        on right: 67 77
    $@3 (75)
        on left: 76
        on right: 77
    ifstmt <str_val> (76)
        on left: 78 79
        on right: 5
    whilestmt <str_val> (77)
        on left: 80
        on right: 6
    forstmt <str_val> (78)
        on left: 81
        on right: 7
    returnstmt <str_val> (79)
        on left: 82 83
        on right: 8


State 0

    0 $accept: • program $end

    $default  reduce using rule 3 (statements)

    program     go to state 1
    statements  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: statements •
    2 statements: statements • stmt

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    SEMICOLON            shift, and go to state 13
    LEFT_BRACKET         shift, and go to state 14
    DOUBLE_COLON         shift, and go to state 15
    IF                   shift, and go to state 16
    WHILE                shift, and go to state 17
    FOR                  shift, and go to state 18
    FUNCTION             shift, and go to state 19
    RETURN_KW            shift, and go to state 20
    BRK                  shift, and go to state 21
    CONTINUE             shift, and go to state 22
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    $default  reduce using rule 1 (program)

    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 3

    0 $accept: program $end •

    $default  accept


State 4

   69 const: INTEGER •

    $default  reduce using rule 69 (const)


State 5

   41 lvalue: ID •

    $default  reduce using rule 41 (lvalue)


State 6

   71 const: STRING •

    $default  reduce using rule 71 (const)


State 7

   70 const: REAL •

    $default  reduce using rule 70 (const)


State 8

   29 term: NOT • expr

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr        go to state 43
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 9

   30 term: INCREMENT • lvalue

    ID                shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 44
    DOUBLE_COLON      shift, and go to state 15
    LOCAL             shift, and go to state 23

    lvalue  go to state 45
    member  go to state 33
    call    go to state 46


State 10

   32 term: DECREMENT • lvalue

    ID                shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 44
    DOUBLE_COLON      shift, and go to state 15
    LOCAL             shift, and go to state 23

    lvalue  go to state 47
    member  go to state 33
    call    go to state 46


State 11

   59 objectdef: LEFT_SQUARE_BRACKET • elist RIGHT_SQUARE_BRACKET
   60          | LEFT_SQUARE_BRACKET • indexed RIGHT_SQUARE_BRACKET

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    LEFT_BRACKET         shift, and go to state 48
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr         go to state 49
    term         go to state 29
    assignexpr   go to state 30
    primary      go to state 31
    lvalue       go to state 32
    member       go to state 33
    call         go to state 34
    elist        go to state 50
    objectdef    go to state 35
    indexed      go to state 51
    indexedelem  go to state 52
    const        go to state 38


State 12

   39 primary: LEFT_PARENTHESIS • funcdef RIGHT_PARENTHESIS
   51 call: LEFT_PARENTHESIS • funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION  shift, and go to state 19

    funcdef  go to state 53


State 13

   13 stmt: SEMICOLON •

    $default  reduce using rule 13 (stmt)


State 14

   65 block: LEFT_BRACKET • stmt RIGHT_BRACKET
   66      | LEFT_BRACKET • RIGHT_BRACKET

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    SEMICOLON            shift, and go to state 13
    LEFT_BRACKET         shift, and go to state 14
    RIGHT_BRACKET        shift, and go to state 54
    DOUBLE_COLON         shift, and go to state 15
    IF                   shift, and go to state 16
    WHILE                shift, and go to state 17
    FOR                  shift, and go to state 18
    FUNCTION             shift, and go to state 19
    RETURN_KW            shift, and go to state 20
    BRK                  shift, and go to state 21
    CONTINUE             shift, and go to state 22
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    stmt        go to state 55
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 15

   43 lvalue: DOUBLE_COLON • ID

    ID  shift, and go to state 56


State 16

   78 ifstmt: IF • LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE stmt
   79       | IF • LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt

    LEFT_PARENTHESIS  shift, and go to state 57


State 17

   80 whilestmt: WHILE • LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt

    LEFT_PARENTHESIS  shift, and go to state 58


State 18

   81 forstmt: FOR • LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist SEMICOLON RIGHT_PARENTHESIS stmt

    LEFT_PARENTHESIS  shift, and go to state 59


State 19

   67 funcdef: FUNCTION • ID LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block
   68        | FUNCTION • ID LEFT_PARENTHESIS RIGHT_PARENTHESIS block

    ID  shift, and go to state 60


State 20

   82 returnstmt: RETURN_KW • SEMICOLON
   83           | RETURN_KW • expr SEMICOLON

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    SEMICOLON            shift, and go to state 61
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr        go to state 62
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 21

    9 stmt: BRK • SEMICOLON

    SEMICOLON  shift, and go to state 63


State 22

   10 stmt: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 64


State 23

   42 lvalue: LOCAL • ID

    ID  shift, and go to state 65


State 24

   73 const: TRUE_KW •

    $default  reduce using rule 73 (const)


State 25

   74 const: FALSE_KW •

    $default  reduce using rule 74 (const)


State 26

   72 const: NIL •

    $default  reduce using rule 72 (const)


State 27

    2 statements: statements stmt •

    $default  reduce using rule 2 (statements)


State 28

    4 stmt: expr • SEMICOLON
   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • SLASH expr
   18     | expr • MULTIPLY expr
   19     | expr • MODULO expr
   20     | expr • GREATER_THAN expr
   21     | expr • GREATER_EQUAL expr
   22     | expr • LESSER_THAN expr
   23     | expr • LESSER_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr

    OR             shift, and go to state 66
    AND            shift, and go to state 67
    EQUAL          shift, and go to state 68
    NOT_EQUAL      shift, and go to state 69
    GREATER_THAN   shift, and go to state 70
    GREATER_EQUAL  shift, and go to state 71
    LESSER_THAN    shift, and go to state 72
    LESSER_EQUAL   shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULTIPLY       shift, and go to state 76
    SLASH          shift, and go to state 77
    MODULO         shift, and go to state 78
    SEMICOLON      shift, and go to state 79


State 29

   28 expr: term •

    $default  reduce using rule 28 (expr)


State 30

   14 expr: assignexpr •

    $default  reduce using rule 14 (expr)


State 31

   34 term: primary •

    $default  reduce using rule 34 (term)


State 32

   31 term: lvalue • INCREMENT
   33     | lvalue • DECREMENT
   35 assignexpr: lvalue • ASSIGN expr
   36 primary: lvalue •
   45 member: lvalue • DOT ID
   46       | lvalue • LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   50 call: lvalue • callsuffix

    ASSIGN               shift, and go to state 80
    INCREMENT            shift, and go to state 81
    DECREMENT            shift, and go to state 82
    DOT                  shift, and go to state 83
    DOUBLE_DOT           shift, and go to state 84
    LEFT_SQUARE_BRACKET  shift, and go to state 85
    LEFT_PARENTHESIS     shift, and go to state 86

    $default  reduce using rule 36 (primary)

    callsuffix  go to state 87
    normcall    go to state 88
    methodcall  go to state 89


State 33

   44 lvalue: member •

    $default  reduce using rule 44 (lvalue)


State 34

   37 primary: call •
   47 member: call • DOT ID
   48       | call • LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   49 call: call • LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    DOT                  shift, and go to state 90
    LEFT_SQUARE_BRACKET  shift, and go to state 91
    LEFT_PARENTHESIS     shift, and go to state 92

    $default  reduce using rule 37 (primary)


State 35

   38 primary: objectdef •

    $default  reduce using rule 38 (primary)


State 36

   11 stmt: block •

    $default  reduce using rule 11 (stmt)


State 37

   12 stmt: funcdef •

    $default  reduce using rule 12 (stmt)


State 38

   40 primary: const •

    $default  reduce using rule 40 (primary)


State 39

    5 stmt: ifstmt •

    $default  reduce using rule 5 (stmt)


State 40

    6 stmt: whilestmt •

    $default  reduce using rule 6 (stmt)


State 41

    7 stmt: forstmt •

    $default  reduce using rule 7 (stmt)


State 42

    8 stmt: returnstmt •

    $default  reduce using rule 8 (stmt)


State 43

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • SLASH expr
   18     | expr • MULTIPLY expr
   19     | expr • MODULO expr
   20     | expr • GREATER_THAN expr
   21     | expr • GREATER_EQUAL expr
   22     | expr • LESSER_THAN expr
   23     | expr • LESSER_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr
   29 term: NOT expr •

    $default  reduce using rule 29 (term)


State 44

   51 call: LEFT_PARENTHESIS • funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION  shift, and go to state 19

    funcdef  go to state 93


State 45

   30 term: INCREMENT lvalue •
   45 member: lvalue • DOT ID
   46       | lvalue • LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   50 call: lvalue • callsuffix

    DOT                  shift, and go to state 83
    DOUBLE_DOT           shift, and go to state 84
    LEFT_SQUARE_BRACKET  shift, and go to state 85
    LEFT_PARENTHESIS     shift, and go to state 86

    $default  reduce using rule 30 (term)

    callsuffix  go to state 87
    normcall    go to state 88
    methodcall  go to state 89


State 46

   47 member: call • DOT ID
   48       | call • LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   49 call: call • LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    DOT                  shift, and go to state 90
    LEFT_SQUARE_BRACKET  shift, and go to state 91
    LEFT_PARENTHESIS     shift, and go to state 92


State 47

   32 term: DECREMENT lvalue •
   45 member: lvalue • DOT ID
   46       | lvalue • LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   50 call: lvalue • callsuffix

    DOT                  shift, and go to state 83
    DOUBLE_DOT           shift, and go to state 84
    LEFT_SQUARE_BRACKET  shift, and go to state 85
    LEFT_PARENTHESIS     shift, and go to state 86

    $default  reduce using rule 32 (term)

    callsuffix  go to state 87
    normcall    go to state 88
    methodcall  go to state 89


State 48

   64 indexedelem: LEFT_BRACKET • expr COLON expr RIGHT_BRACKET

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr        go to state 94
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 49

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • SLASH expr
   18     | expr • MULTIPLY expr
   19     | expr • MODULO expr
   20     | expr • GREATER_THAN expr
   21     | expr • GREATER_EQUAL expr
   22     | expr • LESSER_THAN expr
   23     | expr • LESSER_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr
   56 elist: expr •
   58      | expr • COMMA elist $@1

    OR             shift, and go to state 66
    AND            shift, and go to state 67
    EQUAL          shift, and go to state 68
    NOT_EQUAL      shift, and go to state 69
    GREATER_THAN   shift, and go to state 70
    GREATER_EQUAL  shift, and go to state 71
    LESSER_THAN    shift, and go to state 72
    LESSER_EQUAL   shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULTIPLY       shift, and go to state 76
    SLASH          shift, and go to state 77
    MODULO         shift, and go to state 78
    COMMA          shift, and go to state 95

    $default  reduce using rule 56 (elist)


State 50

   59 objectdef: LEFT_SQUARE_BRACKET elist • RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 96


State 51

   60 objectdef: LEFT_SQUARE_BRACKET indexed • RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 97


State 52

   61 indexed: indexedelem •
   63        | indexedelem • COMMA indexed $@2

    COMMA  shift, and go to state 98

    $default  reduce using rule 61 (indexed)


State 53

   39 primary: LEFT_PARENTHESIS funcdef • RIGHT_PARENTHESIS
   51 call: LEFT_PARENTHESIS funcdef • RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 99


State 54

   66 block: LEFT_BRACKET RIGHT_BRACKET •

    $default  reduce using rule 66 (block)


State 55

   65 block: LEFT_BRACKET stmt • RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 100


State 56

   43 lvalue: DOUBLE_COLON ID •

    $default  reduce using rule 43 (lvalue)


State 57

   78 ifstmt: IF LEFT_PARENTHESIS • expr RIGHT_PARENTHESIS stmt ELSE stmt
   79       | IF LEFT_PARENTHESIS • expr RIGHT_PARENTHESIS stmt

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr        go to state 101
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 58

   80 whilestmt: WHILE LEFT_PARENTHESIS • expr RIGHT_PARENTHESIS stmt

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr        go to state 102
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 59

   81 forstmt: FOR LEFT_PARENTHESIS • elist SEMICOLON expr SEMICOLON elist SEMICOLON RIGHT_PARENTHESIS stmt

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr        go to state 49
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 103
    objectdef   go to state 35
    const       go to state 38


State 60

   67 funcdef: FUNCTION ID • LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block
   68        | FUNCTION ID • LEFT_PARENTHESIS RIGHT_PARENTHESIS block

    LEFT_PARENTHESIS  shift, and go to state 104


State 61

   82 returnstmt: RETURN_KW SEMICOLON •

    $default  reduce using rule 82 (returnstmt)


State 62

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • SLASH expr
   18     | expr • MULTIPLY expr
   19     | expr • MODULO expr
   20     | expr • GREATER_THAN expr
   21     | expr • GREATER_EQUAL expr
   22     | expr • LESSER_THAN expr
   23     | expr • LESSER_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr
   83 returnstmt: RETURN_KW expr • SEMICOLON

    OR             shift, and go to state 66
    AND            shift, and go to state 67
    EQUAL          shift, and go to state 68
    NOT_EQUAL      shift, and go to state 69
    GREATER_THAN   shift, and go to state 70
    GREATER_EQUAL  shift, and go to state 71
    LESSER_THAN    shift, and go to state 72
    LESSER_EQUAL   shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULTIPLY       shift, and go to state 76
    SLASH          shift, and go to state 77
    MODULO         shift, and go to state 78
    SEMICOLON      shift, and go to state 105


State 63

    9 stmt: BRK SEMICOLON •

    $default  reduce using rule 9 (stmt)


State 64

   10 stmt: CONTINUE SEMICOLON •

    $default  reduce using rule 10 (stmt)


State 65

   42 lvalue: LOCAL ID •

    $default  reduce using rule 42 (lvalue)


State 66

   27 expr: expr OR • expr

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr        go to state 106
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 67

   26 expr: expr AND • expr

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr        go to state 107
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 68

   24 expr: expr EQUAL • expr

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr        go to state 108
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 69

   25 expr: expr NOT_EQUAL • expr

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr        go to state 109
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 70

   20 expr: expr GREATER_THAN • expr

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr        go to state 110
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 71

   21 expr: expr GREATER_EQUAL • expr

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr        go to state 111
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 72

   22 expr: expr LESSER_THAN • expr

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr        go to state 112
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 73

   23 expr: expr LESSER_EQUAL • expr

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr        go to state 113
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 74

   15 expr: expr PLUS • expr

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr        go to state 114
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 75

   16 expr: expr MINUS • expr

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr        go to state 115
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 76

   18 expr: expr MULTIPLY • expr

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr        go to state 116
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 77

   17 expr: expr SLASH • expr

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr        go to state 117
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 78

   19 expr: expr MODULO • expr

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr        go to state 118
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 79

    4 stmt: expr SEMICOLON •

    $default  reduce using rule 4 (stmt)


State 80

   35 assignexpr: lvalue ASSIGN • expr

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr        go to state 119
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 81

   31 term: lvalue INCREMENT •

    $default  reduce using rule 31 (term)


State 82

   33 term: lvalue DECREMENT •

    $default  reduce using rule 33 (term)


State 83

   45 member: lvalue DOT • ID

    ID  shift, and go to state 120


State 84

   55 methodcall: DOUBLE_DOT • ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    ID  shift, and go to state 121


State 85

   46 member: lvalue LEFT_SQUARE_BRACKET • expr RIGHT_SQUARE_BRACKET

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr        go to state 122
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 86

   54 normcall: LEFT_PARENTHESIS • elist RIGHT_PARENTHESIS

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr        go to state 49
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 123
    objectdef   go to state 35
    const       go to state 38


State 87

   50 call: lvalue callsuffix •

    $default  reduce using rule 50 (call)


State 88

   52 callsuffix: normcall •

    $default  reduce using rule 52 (callsuffix)


State 89

   53 callsuffix: methodcall •

    $default  reduce using rule 53 (callsuffix)


State 90

   47 member: call DOT • ID

    ID  shift, and go to state 124


State 91

   48 member: call LEFT_SQUARE_BRACKET • expr RIGHT_SQUARE_BRACKET

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr        go to state 125
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 92

   49 call: call LEFT_PARENTHESIS • elist RIGHT_PARENTHESIS

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr        go to state 49
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 126
    objectdef   go to state 35
    const       go to state 38


State 93

   51 call: LEFT_PARENTHESIS funcdef • RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 127


State 94

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • SLASH expr
   18     | expr • MULTIPLY expr
   19     | expr • MODULO expr
   20     | expr • GREATER_THAN expr
   21     | expr • GREATER_EQUAL expr
   22     | expr • LESSER_THAN expr
   23     | expr • LESSER_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr
   64 indexedelem: LEFT_BRACKET expr • COLON expr RIGHT_BRACKET

    OR             shift, and go to state 66
    AND            shift, and go to state 67
    EQUAL          shift, and go to state 68
    NOT_EQUAL      shift, and go to state 69
    GREATER_THAN   shift, and go to state 70
    GREATER_EQUAL  shift, and go to state 71
    LESSER_THAN    shift, and go to state 72
    LESSER_EQUAL   shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULTIPLY       shift, and go to state 76
    SLASH          shift, and go to state 77
    MODULO         shift, and go to state 78
    COLON          shift, and go to state 128


State 95

   58 elist: expr COMMA • elist $@1

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr        go to state 49
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 129
    objectdef   go to state 35
    const       go to state 38


State 96

   59 objectdef: LEFT_SQUARE_BRACKET elist RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 59 (objectdef)


State 97

   60 objectdef: LEFT_SQUARE_BRACKET indexed RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 60 (objectdef)


State 98

   63 indexed: indexedelem COMMA • indexed $@2

    LEFT_BRACKET  shift, and go to state 48

    indexed      go to state 130
    indexedelem  go to state 52


State 99

   39 primary: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS •
   51 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS • LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 131

    $default  reduce using rule 39 (primary)


State 100

   65 block: LEFT_BRACKET stmt RIGHT_BRACKET •

    $default  reduce using rule 65 (block)


State 101

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • SLASH expr
   18     | expr • MULTIPLY expr
   19     | expr • MODULO expr
   20     | expr • GREATER_THAN expr
   21     | expr • GREATER_EQUAL expr
   22     | expr • LESSER_THAN expr
   23     | expr • LESSER_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr
   78 ifstmt: IF LEFT_PARENTHESIS expr • RIGHT_PARENTHESIS stmt ELSE stmt
   79       | IF LEFT_PARENTHESIS expr • RIGHT_PARENTHESIS stmt

    OR                 shift, and go to state 66
    AND                shift, and go to state 67
    EQUAL              shift, and go to state 68
    NOT_EQUAL          shift, and go to state 69
    GREATER_THAN       shift, and go to state 70
    GREATER_EQUAL      shift, and go to state 71
    LESSER_THAN        shift, and go to state 72
    LESSER_EQUAL       shift, and go to state 73
    PLUS               shift, and go to state 74
    MINUS              shift, and go to state 75
    MULTIPLY           shift, and go to state 76
    SLASH              shift, and go to state 77
    MODULO             shift, and go to state 78
    RIGHT_PARENTHESIS  shift, and go to state 132


State 102

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • SLASH expr
   18     | expr • MULTIPLY expr
   19     | expr • MODULO expr
   20     | expr • GREATER_THAN expr
   21     | expr • GREATER_EQUAL expr
   22     | expr • LESSER_THAN expr
   23     | expr • LESSER_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr
   80 whilestmt: WHILE LEFT_PARENTHESIS expr • RIGHT_PARENTHESIS stmt

    OR                 shift, and go to state 66
    AND                shift, and go to state 67
    EQUAL              shift, and go to state 68
    NOT_EQUAL          shift, and go to state 69
    GREATER_THAN       shift, and go to state 70
    GREATER_EQUAL      shift, and go to state 71
    LESSER_THAN        shift, and go to state 72
    LESSER_EQUAL       shift, and go to state 73
    PLUS               shift, and go to state 74
    MINUS              shift, and go to state 75
    MULTIPLY           shift, and go to state 76
    SLASH              shift, and go to state 77
    MODULO             shift, and go to state 78
    RIGHT_PARENTHESIS  shift, and go to state 133


State 103

   81 forstmt: FOR LEFT_PARENTHESIS elist • SEMICOLON expr SEMICOLON elist SEMICOLON RIGHT_PARENTHESIS stmt

    SEMICOLON  shift, and go to state 134


State 104

   67 funcdef: FUNCTION ID LEFT_PARENTHESIS • idlist RIGHT_PARENTHESIS block
   68        | FUNCTION ID LEFT_PARENTHESIS • RIGHT_PARENTHESIS block

    ID                 shift, and go to state 135
    RIGHT_PARENTHESIS  shift, and go to state 136
    COMMA              shift, and go to state 137

    idlist  go to state 138


State 105

   83 returnstmt: RETURN_KW expr SEMICOLON •

    $default  reduce using rule 83 (returnstmt)


State 106

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • SLASH expr
   18     | expr • MULTIPLY expr
   19     | expr • MODULO expr
   20     | expr • GREATER_THAN expr
   21     | expr • GREATER_EQUAL expr
   22     | expr • LESSER_THAN expr
   23     | expr • LESSER_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr
   27     | expr OR expr •

    AND            shift, and go to state 67
    EQUAL          shift, and go to state 68
    NOT_EQUAL      shift, and go to state 69
    GREATER_THAN   shift, and go to state 70
    GREATER_EQUAL  shift, and go to state 71
    LESSER_THAN    shift, and go to state 72
    LESSER_EQUAL   shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULTIPLY       shift, and go to state 76
    SLASH          shift, and go to state 77
    MODULO         shift, and go to state 78

    $default  reduce using rule 27 (expr)


State 107

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • SLASH expr
   18     | expr • MULTIPLY expr
   19     | expr • MODULO expr
   20     | expr • GREATER_THAN expr
   21     | expr • GREATER_EQUAL expr
   22     | expr • LESSER_THAN expr
   23     | expr • LESSER_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   26     | expr AND expr •
   27     | expr • OR expr

    EQUAL          shift, and go to state 68
    NOT_EQUAL      shift, and go to state 69
    GREATER_THAN   shift, and go to state 70
    GREATER_EQUAL  shift, and go to state 71
    LESSER_THAN    shift, and go to state 72
    LESSER_EQUAL   shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULTIPLY       shift, and go to state 76
    SLASH          shift, and go to state 77
    MODULO         shift, and go to state 78

    $default  reduce using rule 26 (expr)


State 108

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • SLASH expr
   18     | expr • MULTIPLY expr
   19     | expr • MODULO expr
   20     | expr • GREATER_THAN expr
   21     | expr • GREATER_EQUAL expr
   22     | expr • LESSER_THAN expr
   23     | expr • LESSER_EQUAL expr
   24     | expr • EQUAL expr
   24     | expr EQUAL expr •
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr

    GREATER_THAN   shift, and go to state 70
    GREATER_EQUAL  shift, and go to state 71
    LESSER_THAN    shift, and go to state 72
    LESSER_EQUAL   shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULTIPLY       shift, and go to state 76
    SLASH          shift, and go to state 77
    MODULO         shift, and go to state 78

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 109

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • SLASH expr
   18     | expr • MULTIPLY expr
   19     | expr • MODULO expr
   20     | expr • GREATER_THAN expr
   21     | expr • GREATER_EQUAL expr
   22     | expr • LESSER_THAN expr
   23     | expr • LESSER_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   25     | expr NOT_EQUAL expr •
   26     | expr • AND expr
   27     | expr • OR expr

    GREATER_THAN   shift, and go to state 70
    GREATER_EQUAL  shift, and go to state 71
    LESSER_THAN    shift, and go to state 72
    LESSER_EQUAL   shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULTIPLY       shift, and go to state 76
    SLASH          shift, and go to state 77
    MODULO         shift, and go to state 78

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 110

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • SLASH expr
   18     | expr • MULTIPLY expr
   19     | expr • MODULO expr
   20     | expr • GREATER_THAN expr
   20     | expr GREATER_THAN expr •
   21     | expr • GREATER_EQUAL expr
   22     | expr • LESSER_THAN expr
   23     | expr • LESSER_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr

    PLUS      shift, and go to state 74
    MINUS     shift, and go to state 75
    MULTIPLY  shift, and go to state 76
    SLASH     shift, and go to state 77
    MODULO    shift, and go to state 78

    GREATER_THAN   error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESSER_THAN    error (nonassociative)
    LESSER_EQUAL   error (nonassociative)

    $default  reduce using rule 20 (expr)


State 111

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • SLASH expr
   18     | expr • MULTIPLY expr
   19     | expr • MODULO expr
   20     | expr • GREATER_THAN expr
   21     | expr • GREATER_EQUAL expr
   21     | expr GREATER_EQUAL expr •
   22     | expr • LESSER_THAN expr
   23     | expr • LESSER_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr

    PLUS      shift, and go to state 74
    MINUS     shift, and go to state 75
    MULTIPLY  shift, and go to state 76
    SLASH     shift, and go to state 77
    MODULO    shift, and go to state 78

    GREATER_THAN   error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESSER_THAN    error (nonassociative)
    LESSER_EQUAL   error (nonassociative)

    $default  reduce using rule 21 (expr)


State 112

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • SLASH expr
   18     | expr • MULTIPLY expr
   19     | expr • MODULO expr
   20     | expr • GREATER_THAN expr
   21     | expr • GREATER_EQUAL expr
   22     | expr • LESSER_THAN expr
   22     | expr LESSER_THAN expr •
   23     | expr • LESSER_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr

    PLUS      shift, and go to state 74
    MINUS     shift, and go to state 75
    MULTIPLY  shift, and go to state 76
    SLASH     shift, and go to state 77
    MODULO    shift, and go to state 78

    GREATER_THAN   error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESSER_THAN    error (nonassociative)
    LESSER_EQUAL   error (nonassociative)

    $default  reduce using rule 22 (expr)


State 113

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • SLASH expr
   18     | expr • MULTIPLY expr
   19     | expr • MODULO expr
   20     | expr • GREATER_THAN expr
   21     | expr • GREATER_EQUAL expr
   22     | expr • LESSER_THAN expr
   23     | expr • LESSER_EQUAL expr
   23     | expr LESSER_EQUAL expr •
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr

    PLUS      shift, and go to state 74
    MINUS     shift, and go to state 75
    MULTIPLY  shift, and go to state 76
    SLASH     shift, and go to state 77
    MODULO    shift, and go to state 78

    GREATER_THAN   error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESSER_THAN    error (nonassociative)
    LESSER_EQUAL   error (nonassociative)

    $default  reduce using rule 23 (expr)


State 114

   15 expr: expr • PLUS expr
   15     | expr PLUS expr •
   16     | expr • MINUS expr
   17     | expr • SLASH expr
   18     | expr • MULTIPLY expr
   19     | expr • MODULO expr
   20     | expr • GREATER_THAN expr
   21     | expr • GREATER_EQUAL expr
   22     | expr • LESSER_THAN expr
   23     | expr • LESSER_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr

    MULTIPLY  shift, and go to state 76
    SLASH     shift, and go to state 77
    MODULO    shift, and go to state 78

    $default  reduce using rule 15 (expr)


State 115

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   16     | expr MINUS expr •
   17     | expr • SLASH expr
   18     | expr • MULTIPLY expr
   19     | expr • MODULO expr
   20     | expr • GREATER_THAN expr
   21     | expr • GREATER_EQUAL expr
   22     | expr • LESSER_THAN expr
   23     | expr • LESSER_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr

    MULTIPLY  shift, and go to state 76
    SLASH     shift, and go to state 77
    MODULO    shift, and go to state 78

    $default  reduce using rule 16 (expr)


State 116

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • SLASH expr
   18     | expr • MULTIPLY expr
   18     | expr MULTIPLY expr •
   19     | expr • MODULO expr
   20     | expr • GREATER_THAN expr
   21     | expr • GREATER_EQUAL expr
   22     | expr • LESSER_THAN expr
   23     | expr • LESSER_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr

    $default  reduce using rule 18 (expr)


State 117

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • SLASH expr
   17     | expr SLASH expr •
   18     | expr • MULTIPLY expr
   19     | expr • MODULO expr
   20     | expr • GREATER_THAN expr
   21     | expr • GREATER_EQUAL expr
   22     | expr • LESSER_THAN expr
   23     | expr • LESSER_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr

    $default  reduce using rule 17 (expr)


State 118

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • SLASH expr
   18     | expr • MULTIPLY expr
   19     | expr • MODULO expr
   19     | expr MODULO expr •
   20     | expr • GREATER_THAN expr
   21     | expr • GREATER_EQUAL expr
   22     | expr • LESSER_THAN expr
   23     | expr • LESSER_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr

    $default  reduce using rule 19 (expr)


State 119

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • SLASH expr
   18     | expr • MULTIPLY expr
   19     | expr • MODULO expr
   20     | expr • GREATER_THAN expr
   21     | expr • GREATER_EQUAL expr
   22     | expr • LESSER_THAN expr
   23     | expr • LESSER_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr
   35 assignexpr: lvalue ASSIGN expr •

    OR             shift, and go to state 66
    AND            shift, and go to state 67
    EQUAL          shift, and go to state 68
    NOT_EQUAL      shift, and go to state 69
    GREATER_THAN   shift, and go to state 70
    GREATER_EQUAL  shift, and go to state 71
    LESSER_THAN    shift, and go to state 72
    LESSER_EQUAL   shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULTIPLY       shift, and go to state 76
    SLASH          shift, and go to state 77
    MODULO         shift, and go to state 78

    $default  reduce using rule 35 (assignexpr)


State 120

   45 member: lvalue DOT ID •

    $default  reduce using rule 45 (member)


State 121

   55 methodcall: DOUBLE_DOT ID • LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 139


State 122

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • SLASH expr
   18     | expr • MULTIPLY expr
   19     | expr • MODULO expr
   20     | expr • GREATER_THAN expr
   21     | expr • GREATER_EQUAL expr
   22     | expr • LESSER_THAN expr
   23     | expr • LESSER_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr
   46 member: lvalue LEFT_SQUARE_BRACKET expr • RIGHT_SQUARE_BRACKET

    OR                    shift, and go to state 66
    AND                   shift, and go to state 67
    EQUAL                 shift, and go to state 68
    NOT_EQUAL             shift, and go to state 69
    GREATER_THAN          shift, and go to state 70
    GREATER_EQUAL         shift, and go to state 71
    LESSER_THAN           shift, and go to state 72
    LESSER_EQUAL          shift, and go to state 73
    PLUS                  shift, and go to state 74
    MINUS                 shift, and go to state 75
    MULTIPLY              shift, and go to state 76
    SLASH                 shift, and go to state 77
    MODULO                shift, and go to state 78
    RIGHT_SQUARE_BRACKET  shift, and go to state 140


State 123

   54 normcall: LEFT_PARENTHESIS elist • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 141


State 124

   47 member: call DOT ID •

    $default  reduce using rule 47 (member)


State 125

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • SLASH expr
   18     | expr • MULTIPLY expr
   19     | expr • MODULO expr
   20     | expr • GREATER_THAN expr
   21     | expr • GREATER_EQUAL expr
   22     | expr • LESSER_THAN expr
   23     | expr • LESSER_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr
   48 member: call LEFT_SQUARE_BRACKET expr • RIGHT_SQUARE_BRACKET

    OR                    shift, and go to state 66
    AND                   shift, and go to state 67
    EQUAL                 shift, and go to state 68
    NOT_EQUAL             shift, and go to state 69
    GREATER_THAN          shift, and go to state 70
    GREATER_EQUAL         shift, and go to state 71
    LESSER_THAN           shift, and go to state 72
    LESSER_EQUAL          shift, and go to state 73
    PLUS                  shift, and go to state 74
    MINUS                 shift, and go to state 75
    MULTIPLY              shift, and go to state 76
    SLASH                 shift, and go to state 77
    MODULO                shift, and go to state 78
    RIGHT_SQUARE_BRACKET  shift, and go to state 142


State 126

   49 call: call LEFT_PARENTHESIS elist • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 143


State 127

   51 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS • LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 131


State 128

   64 indexedelem: LEFT_BRACKET expr COLON • expr RIGHT_BRACKET

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr        go to state 144
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 129

   58 elist: expr COMMA elist • $@1

    $default  reduce using rule 57 ($@1)

    $@1  go to state 145


State 130

   63 indexed: indexedelem COMMA indexed • $@2

    $default  reduce using rule 62 ($@2)

    $@2  go to state 146


State 131

   51 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS • elist RIGHT_PARENTHESIS

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr        go to state 49
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 147
    objectdef   go to state 35
    const       go to state 38


State 132

   78 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS • stmt ELSE stmt
   79       | IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS • stmt

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    SEMICOLON            shift, and go to state 13
    LEFT_BRACKET         shift, and go to state 14
    DOUBLE_COLON         shift, and go to state 15
    IF                   shift, and go to state 16
    WHILE                shift, and go to state 17
    FOR                  shift, and go to state 18
    FUNCTION             shift, and go to state 19
    RETURN_KW            shift, and go to state 20
    BRK                  shift, and go to state 21
    CONTINUE             shift, and go to state 22
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    stmt        go to state 148
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 133

   80 whilestmt: WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS • stmt

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    SEMICOLON            shift, and go to state 13
    LEFT_BRACKET         shift, and go to state 14
    DOUBLE_COLON         shift, and go to state 15
    IF                   shift, and go to state 16
    WHILE                shift, and go to state 17
    FOR                  shift, and go to state 18
    FUNCTION             shift, and go to state 19
    RETURN_KW            shift, and go to state 20
    BRK                  shift, and go to state 21
    CONTINUE             shift, and go to state 22
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    stmt        go to state 149
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 134

   81 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON • expr SEMICOLON elist SEMICOLON RIGHT_PARENTHESIS stmt

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr        go to state 150
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 135

   75 idlist: ID •

    $default  reduce using rule 75 (idlist)


State 136

   68 funcdef: FUNCTION ID LEFT_PARENTHESIS RIGHT_PARENTHESIS • block

    LEFT_BRACKET  shift, and go to state 14

    block  go to state 151


State 137

   77 idlist: COMMA • ID idlist $@3

    ID  shift, and go to state 152


State 138

   67 funcdef: FUNCTION ID LEFT_PARENTHESIS idlist • RIGHT_PARENTHESIS block

    RIGHT_PARENTHESIS  shift, and go to state 153


State 139

   55 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS • elist RIGHT_PARENTHESIS

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr        go to state 49
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 154
    objectdef   go to state 35
    const       go to state 38


State 140

   46 member: lvalue LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 46 (member)


State 141

   54 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS •

    $default  reduce using rule 54 (normcall)


State 142

   48 member: call LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 48 (member)


State 143

   49 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS •

    $default  reduce using rule 49 (call)


State 144

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • SLASH expr
   18     | expr • MULTIPLY expr
   19     | expr • MODULO expr
   20     | expr • GREATER_THAN expr
   21     | expr • GREATER_EQUAL expr
   22     | expr • LESSER_THAN expr
   23     | expr • LESSER_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr
   64 indexedelem: LEFT_BRACKET expr COLON expr • RIGHT_BRACKET

    OR             shift, and go to state 66
    AND            shift, and go to state 67
    EQUAL          shift, and go to state 68
    NOT_EQUAL      shift, and go to state 69
    GREATER_THAN   shift, and go to state 70
    GREATER_EQUAL  shift, and go to state 71
    LESSER_THAN    shift, and go to state 72
    LESSER_EQUAL   shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULTIPLY       shift, and go to state 76
    SLASH          shift, and go to state 77
    MODULO         shift, and go to state 78
    RIGHT_BRACKET  shift, and go to state 155


State 145

   58 elist: expr COMMA elist $@1 •

    $default  reduce using rule 58 (elist)


State 146

   63 indexed: indexedelem COMMA indexed $@2 •

    $default  reduce using rule 63 (indexed)


State 147

   51 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 156


State 148

   78 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt • ELSE stmt
   79       | IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt •

    ELSE  shift, and go to state 157

    ELSE      [reduce using rule 79 (ifstmt)]
    $default  reduce using rule 79 (ifstmt)


State 149

   80 whilestmt: WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt •

    $default  reduce using rule 80 (whilestmt)


State 150

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • SLASH expr
   18     | expr • MULTIPLY expr
   19     | expr • MODULO expr
   20     | expr • GREATER_THAN expr
   21     | expr • GREATER_EQUAL expr
   22     | expr • LESSER_THAN expr
   23     | expr • LESSER_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr
   81 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr • SEMICOLON elist SEMICOLON RIGHT_PARENTHESIS stmt

    OR             shift, and go to state 66
    AND            shift, and go to state 67
    EQUAL          shift, and go to state 68
    NOT_EQUAL      shift, and go to state 69
    GREATER_THAN   shift, and go to state 70
    GREATER_EQUAL  shift, and go to state 71
    LESSER_THAN    shift, and go to state 72
    LESSER_EQUAL   shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULTIPLY       shift, and go to state 76
    SLASH          shift, and go to state 77
    MODULO         shift, and go to state 78
    SEMICOLON      shift, and go to state 158


State 151

   68 funcdef: FUNCTION ID LEFT_PARENTHESIS RIGHT_PARENTHESIS block •

    $default  reduce using rule 68 (funcdef)


State 152

   77 idlist: COMMA ID • idlist $@3

    ID     shift, and go to state 135
    COMMA  shift, and go to state 137

    idlist  go to state 159


State 153

   67 funcdef: FUNCTION ID LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS • block

    LEFT_BRACKET  shift, and go to state 14

    block  go to state 160


State 154

   55 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 161


State 155

   64 indexedelem: LEFT_BRACKET expr COLON expr RIGHT_BRACKET •

    $default  reduce using rule 64 (indexedelem)


State 156

   51 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS •

    $default  reduce using rule 51 (call)


State 157

   78 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE • stmt

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    SEMICOLON            shift, and go to state 13
    LEFT_BRACKET         shift, and go to state 14
    DOUBLE_COLON         shift, and go to state 15
    IF                   shift, and go to state 16
    WHILE                shift, and go to state 17
    FOR                  shift, and go to state 18
    FUNCTION             shift, and go to state 19
    RETURN_KW            shift, and go to state 20
    BRK                  shift, and go to state 21
    CONTINUE             shift, and go to state 22
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    stmt        go to state 162
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 158

   81 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON • elist SEMICOLON RIGHT_PARENTHESIS stmt

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    DOUBLE_COLON         shift, and go to state 15
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    expr        go to state 49
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 163
    objectdef   go to state 35
    const       go to state 38


State 159

   77 idlist: COMMA ID idlist • $@3

    $default  reduce using rule 76 ($@3)

    $@3  go to state 164


State 160

   67 funcdef: FUNCTION ID LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block •

    $default  reduce using rule 67 (funcdef)


State 161

   55 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS •

    $default  reduce using rule 55 (methodcall)


State 162

   78 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE stmt •

    $default  reduce using rule 78 (ifstmt)


State 163

   81 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist • SEMICOLON RIGHT_PARENTHESIS stmt

    SEMICOLON  shift, and go to state 165


State 164

   77 idlist: COMMA ID idlist $@3 •

    $default  reduce using rule 77 (idlist)


State 165

   81 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist SEMICOLON • RIGHT_PARENTHESIS stmt

    RIGHT_PARENTHESIS  shift, and go to state 166


State 166

   81 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist SEMICOLON RIGHT_PARENTHESIS • stmt

    INTEGER              shift, and go to state 4
    ID                   shift, and go to state 5
    STRING               shift, and go to state 6
    REAL                 shift, and go to state 7
    NOT                  shift, and go to state 8
    INCREMENT            shift, and go to state 9
    DECREMENT            shift, and go to state 10
    LEFT_SQUARE_BRACKET  shift, and go to state 11
    LEFT_PARENTHESIS     shift, and go to state 12
    SEMICOLON            shift, and go to state 13
    LEFT_BRACKET         shift, and go to state 14
    DOUBLE_COLON         shift, and go to state 15
    IF                   shift, and go to state 16
    WHILE                shift, and go to state 17
    FOR                  shift, and go to state 18
    FUNCTION             shift, and go to state 19
    RETURN_KW            shift, and go to state 20
    BRK                  shift, and go to state 21
    CONTINUE             shift, and go to state 22
    LOCAL                shift, and go to state 23
    TRUE_KW              shift, and go to state 24
    FALSE_KW             shift, and go to state 25
    NIL                  shift, and go to state 26

    stmt        go to state 167
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 167

   81 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist SEMICOLON RIGHT_PARENTHESIS stmt •

    $default  reduce using rule 81 (forstmt)
